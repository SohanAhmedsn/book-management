// <auto-generated />
using System;
using BookManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookManagement.Migrations
{
    [DbContext(typeof(BookManagementDbContext))]
    [Migration("20230922055009_InitialDbCreate")]
    partial class InitialDbCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookManagement.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("BookType")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            BookName = "Book01",
                            BookType = 1,
                            Picture = "1.jpg",
                            Price = 950.00m
                        },
                        new
                        {
                            BookId = 2,
                            BookName = "Book02",
                            BookType = 1,
                            Picture = "2.jpg",
                            Price = 1900.00m
                        },
                        new
                        {
                            BookId = 3,
                            BookName = "Book03",
                            BookType = 1,
                            Picture = "3.jpg",
                            Price = 2850.00m
                        },
                        new
                        {
                            BookId = 4,
                            BookName = "Book04",
                            BookType = 1,
                            Picture = "4.jpg",
                            Price = 3800.00m
                        },
                        new
                        {
                            BookId = 5,
                            BookName = "Book05",
                            BookType = 1,
                            Picture = "5.jpg",
                            Price = 4750.00m
                        },
                        new
                        {
                            BookId = 6,
                            BookName = "Book06",
                            BookType = 1,
                            Picture = "6.jpg",
                            Price = 5700.00m
                        },
                        new
                        {
                            BookId = 7,
                            BookName = "Book07",
                            BookType = 1,
                            Picture = "7.jpg",
                            Price = 6650.00m
                        });
                });

            modelBuilder.Entity("BookManagement.Models.BookOrder", b =>
                {
                    b.Property<int>("BookOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookOrderId"));

                    b.Property<DateTime>("BookOrderDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookOrderId");

                    b.ToTable("BookOrders");
                });

            modelBuilder.Entity("BookManagement.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublisherDate")
                        .HasColumnType("date");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPublisher")
                        .HasColumnType("int");

                    b.HasKey("PublisherId");

                    b.HasIndex("BookId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            BookId = 1,
                            PublisherDate = new DateTime(2023, 8, 30, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2434),
                            PublisherName = "Publisher01",
                            TotalPublisher = 50
                        },
                        new
                        {
                            PublisherId = 2,
                            BookId = 2,
                            PublisherDate = new DateTime(2023, 8, 7, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2469),
                            PublisherName = "Publisher02",
                            TotalPublisher = 100
                        },
                        new
                        {
                            PublisherId = 3,
                            BookId = 3,
                            PublisherDate = new DateTime(2023, 7, 15, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2478),
                            PublisherName = "Publisher03",
                            TotalPublisher = 150
                        },
                        new
                        {
                            PublisherId = 4,
                            BookId = 4,
                            PublisherDate = new DateTime(2023, 6, 22, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2487),
                            PublisherName = "Publisher04",
                            TotalPublisher = 200
                        },
                        new
                        {
                            PublisherId = 5,
                            BookId = 5,
                            PublisherDate = new DateTime(2023, 5, 30, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2495),
                            PublisherName = "Publisher05",
                            TotalPublisher = 250
                        },
                        new
                        {
                            PublisherId = 6,
                            BookId = 6,
                            PublisherDate = new DateTime(2023, 5, 7, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2505),
                            PublisherName = "Publisher06",
                            TotalPublisher = 300
                        },
                        new
                        {
                            PublisherId = 7,
                            BookId = 7,
                            PublisherDate = new DateTime(2023, 4, 14, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2513),
                            PublisherName = "Publisher07",
                            TotalPublisher = 350
                        },
                        new
                        {
                            PublisherId = 8,
                            BookId = 1,
                            PublisherDate = new DateTime(2023, 3, 22, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2522),
                            PublisherName = "Publisher08",
                            TotalPublisher = 400
                        },
                        new
                        {
                            PublisherId = 9,
                            BookId = 2,
                            PublisherDate = new DateTime(2023, 2, 27, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2532),
                            PublisherName = "Publisher09",
                            TotalPublisher = 450
                        },
                        new
                        {
                            PublisherId = 10,
                            BookId = 3,
                            PublisherDate = new DateTime(2023, 2, 4, 11, 50, 9, 345, DateTimeKind.Local).AddTicks(2543),
                            PublisherName = "Publisher10",
                            TotalPublisher = 500
                        });
                });

            modelBuilder.Entity("BookManagement.Models.Publisher", b =>
                {
                    b.HasOne("BookManagement.Models.Book", "Books")
                        .WithMany("Publishers")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");
                });

            modelBuilder.Entity("BookManagement.Models.Book", b =>
                {
                    b.Navigation("Publishers");
                });
#pragma warning restore 612, 618
        }
    }
}
